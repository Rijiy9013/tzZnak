version: "3.9"

services:
  php:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    image: ${COMPOSE_PROJECT_NAME}-php:latest
    container_name: ${COMPOSE_PROJECT_NAME}-php
    environment:
      APP_ENV: ${APP_ENV}
      COMPOSER_ALLOW_SUPERUSER: "1"
      DB_HOST: ${DB_HOST}
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      ELASTIC_HOST: ${ELASTIC_HOST}
      DADATA_API_KEY: ${DADATA_API_KEY}
    volumes:
      - ./:/var/www/html:delegated
    depends_on:
      mysql:
        condition: service_healthy
      elastic:
        condition: service_healthy

  nginx:
    image: ${NGINX_IMAGE}
    container_name: ${COMPOSE_PROJECT_NAME}-nginx
    ports:
      - "${NGINX_HTTP_PORT}:80"
    volumes:
      - ./:/var/www/html:ro
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      php:
        condition: service_started

  mysql:
    image: ${MYSQL_IMAGE}
    container_name: ${COMPOSE_PROJECT_NAME}-mysql
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    ports:
      - "${MYSQL_PORT}:3306"
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "${DB_USERNAME}", "-p${DB_PASSWORD}"]
      interval: 5s
      timeout: 3s
      retries: 20
      start_period: 10s

  elastic:
    image: ${ELASTIC_IMAGE}
    platform: linux/amd64
    container_name: ${COMPOSE_PROJECT_NAME}-elastic
    environment:
      discovery.type: single-node
      xpack.security.enabled: "${ELASTIC_SECURITY}"
      ES_JAVA_OPTS: "-Xms${ES_JAVA_XMS} -Xmx${ES_JAVA_XMX}"
    ports:
      - "${ELASTIC_PORT}:9200"
    volumes:
      - es_data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:9200/_cluster/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 15
      start_period: 20s

volumes:
  db_data:
  es_data:
